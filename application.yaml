apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jenkins
  namespace: argocd
  annotations:
    notifications.argoproj.io/subscribe.on-sync-succeeded: "true"
    notifications.argoproj.io/subscribe.on-sync-failed: "true"
spec:
  project: default
  source:
    repoURL: "https://github.com/9oormthon-univ/2024_DANPOON_TEAM_25_MANIFEST"
    path: "jenkins"
    targetRevision: HEAD # 특정 브랜치를 지정하려면 'main' 또는 원하는 브랜치명으로 변경
  destination:
    server: "https://kubernetes.default.svc"
    namespace: jenkins
  syncPolicy:
    automated:
      prune: true # 더 이상 필요없는 리소스 자동 제거
      selfHeal: true # 직접 변경된 리소스 자동 복구
      allowEmpty: false # 빈 디렉토리 배포 방지
    syncOptions:
      - CreateNamespace=true # 네임스페이스 자동 생성
      - PrunePropagationPolicy=foreground # 리소스 삭제 시 종속성 고려
      - PruneLast=true # 새 리소스 생성 후 이전 리소스 제거
    retry:
      limit: 5 # 동기화 실패 시 재시도 횟수
      backoff:
        duration: 5s # 초기 대기 시간
        factor: 2 # 재시도 간격 증가 비율
        maxDuration: 3m # 최대 대기 시간
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: container-server
  namespace: argocd
  annotations:
    notifications.argoproj.io/subscribe.on-sync-succeeded: "true"
    notifications.argoproj.io/subscribe.on-sync-failed: "true"
spec:
  project: default
  source:
    repoURL: "https://github.com/9oormthon-univ/2024_DANPOON_TEAM_25_MANIFEST"
    path: "container-server"
    targetRevision: HEAD # 특정 브랜치를 지정하려면 'main' 또는 원하는 브랜치명으로 변경
  destination:
    server: "https://kubernetes.default.svc"
    namespace: container-server
  syncPolicy:
    automated:
      prune: true # 더 이상 필요없는 리소스 자동 제거
      selfHeal: true # 직접 변경된 리소스 자동 복구
      allowEmpty: false # 빈 디렉토리 배포 방지
    syncOptions:
      - CreateNamespace=true # 네임스페이스 자동 생성
      - PrunePropagationPolicy=foreground # 리소스 삭제 시 종속성 고려
      - PruneLast=true # 새 리소스 생성 후 이전 리소스 제거
    retry:
      limit: 5 # 동기화 실패 시 재시도 횟수
      backoff:
        duration: 5s # 초기 대기 시간
        factor: 2 # 재시도 간격 증가 비율
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: flakeide-fe
  namespace: argocd
  annotations:
    notifications.argoproj.io/subscribe.on-sync-succeeded: "true"
    notifications.argoproj.io/subscribe.on-sync-failed: "true"
spec:
  project: default
  source:
    repoURL: "https://github.com/9oormthon-univ/2024_DANPOON_TEAM_25_MANIFEST"
    path: "fe"
    targetRevision: HEAD # 특정 브랜치를 지정하려면 'main' 또는 원하는 브랜치명으로 변경
  destination:
    server: "https://kubernetes.default.svc"
    namespace: flakeide-fe
  syncPolicy:
    automated:
      prune: true # 더 이상 필요없는 리소스 자동 제거
      selfHeal: true # 직접 변경된 리소스 자동 복구
      allowEmpty: false # 빈 디렉토리 배포 방지
    syncOptions:
      - CreateNamespace=true # 네임스페이스 자동 생성
      - PrunePropagationPolicy=foreground # 리소스 삭제 시 종속성 고려
      - PruneLast=true # 새 리소스 생성 후 이전 리소스 제거
    retry:
      limit: 5 # 동기화 실패 시 재시도 횟수
      backoff:
        duration: 5s # 초기 대기 시간
        factor: 2 # 재시도 간격 증가 비율
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: flakeide-be
  namespace: argocd
  annotations:
    notifications.argoproj.io/subscribe.on-sync-succeeded: "true"
    notifications.argoproj.io/subscribe.on-sync-failed: "true"
spec:
  project: default
  source:
    repoURL: "https://github.com/9oormthon-univ/2024_DANPOON_TEAM_25_MANIFEST"
    path: "be"
    targetRevision: HEAD
  destination:
    server: "https://kubernetes.default.svc"
    namespace: flakeide-be
  syncPolicy:
    automated:
      prune: true # 더 이상 필요없는 리소스 자동 제거
      selfHeal: true # 직접 변경된 리소스 자동 복구
      allowEmpty: false # 빈 디렉토리 배포 방지
    syncOptions:
      - CreateNamespace=true # 네임스페이스 자동 생성
      - PrunePropagationPolicy=foreground # 리소스 삭제 시 종속성 고려
      - PruneLast=true # 새 리소스 생성 후 이전 리소스 제거
    retry:
      limit: 5 # 동기화 실패 시 재시도 횟수
      backoff:
        duration: 5s # 초기 대기 시간
        factor: 2 # 재시도 간격 증가 비율
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: argocd
spec:
  project: default
  source:
    chart: traefik
    repoURL: https://helm.traefik.io/traefik
    targetRevision: 10.19.5 # 원하는 Traefik 버전 지정
    helm:
      values: |
        # Traefik 기본 설정
        deployment:
          enabled: true
          replicas: 2

        # 서비스 설정
        service:
          enabled: true
          type: LoadBalancer

        # 인그레스 라우트 설정
        ports:
          web:
            port: 8000
            expose: true
            exposedPort: 80
            protocol: TCP
          websecure:
            port: 8443
            expose: true
            exposedPort: 443
            protocol: TCP

        # SSL 설정
        ssl:
          enabled: true
          permanentRedirect: true

        # 대시보드 설정
        dashboard:
          enabled: true
          domain: "traefik.flakeide.com"

        # 프로바이더 설정
        providers:
          kubernetesCRD:
            enabled: true
          kubernetesIngress:
            enabled: true
            
        # 로깅 설정
        logs:
          general:
            level: INFO
          access:
            enabled: true

  destination:
    server: https://kubernetes.default.svc
    namespace: traefik-system

  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
